ALTER TABLE assisstant ADD CONSTRAINT fk_codelist_contract type FOREIGN KEY ( contract type ) REFERENCES codelist_contract type ( oid  );
ALTER TABLE assisstant ADD CONSTRAINT fk_employee FOREIGN KEY ( employee_oid ) REFERENCES employee ( oid  );
ALTER TABLE employee ADD CONSTRAINT fk_codelist_type of employee FOREIGN KEY ( type of employee ) REFERENCES codelist_type of employee ( oid  );
ALTER TABLE employee ADD CONSTRAINT fk_is assigned to FOREIGN KEY ( department_oid ) REFERENCES department ( oid  );
ALTER TABLE employee ADD CONSTRAINT fk_supervise FOREIGN KEY ( direct supervisor_oid ) REFERENCES employee ( oid  );
ALTER TABLE employee_has_dependent of employee ADD CONSTRAINT fk_dependent of employee FOREIGN KEY ( dependent of employee_oid ) REFERENCES dependent of employee ( oid  );
ALTER TABLE employee_has_dependent of employee ADD CONSTRAINT fk_employee FOREIGN KEY ( employee_oid ) REFERENCES employee ( oid  );
ALTER TABLE engineer ADD CONSTRAINT fk_employee FOREIGN KEY ( employee_oid ) REFERENCES employee ( oid  );
ALTER TABLE office ADD CONSTRAINT fk_locate FOREIGN KEY ( building(location or place)_oid ) REFERENCES building(location or place) ( oid  );
ALTER TABLE office ADD CONSTRAINT fk_operate FOREIGN KEY ( department_oid ) REFERENCES department ( oid  );
ALTER TABLE project ADD CONSTRAINT fk_codelist_type of marketing FOREIGN KEY ( scope/type of marketing ) REFERENCES codelist_type of marketing ( oid  );
ALTER TABLE project ADD CONSTRAINT fk_manage FOREIGN KEY ( office_oid ) REFERENCES office ( oid  );
ALTER TABLE project area ADD CONSTRAINT fk_building(location or place) FOREIGN KEY ( building(location or place)_oid ) REFERENCES building(location or place) ( oid  );
ALTER TABLE project area ADD CONSTRAINT fk_do not overlap FOREIGN KEY ( project area_oid ) REFERENCES project area ( oid  );
ALTER TABLE project area ADD CONSTRAINT fk_do survey on FOREIGN KEY ( survey plan_oid ) REFERENCES survey plan ( oid  );
ALTER TABLE project area ADD CONSTRAINT fk_locate FOREIGN KEY ( project_oid ) REFERENCES project ( oid  );
ALTER TABLE project_work in_employee ADD CONSTRAINT fk_employee FOREIGN KEY ( employee_oid ) REFERENCES employee ( oid  );
ALTER TABLE project_work in_employee ADD CONSTRAINT fk_project FOREIGN KEY ( project_oid ) REFERENCES project ( oid  );
ALTER TABLE researcher ADD CONSTRAINT fk_employee FOREIGN KEY ( employee_oid ) REFERENCES employee ( oid  );
ALTER TABLE survey plan ADD CONSTRAINT fk_codelist_type of investment opportunities FOREIGN KEY ( type of investment opportunities ) REFERENCES codelist_type of investment opportunities ( oid  );
ALTER TABLE technician ADD CONSTRAINT fk_employee FOREIGN KEY ( employee_oid ) REFERENCES employee ( oid  );
